plugins {
    id 'java-base'
    id "org.springframework.boot" version "${springBootVersion}"
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "mysql:mysql-connector-java:$mysqlVersion"
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        implementation "org.springframework.boot:spring-boot-starter-tomcat"
        implementation "io.springfox:springfox-boot-starter:$springFox"

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation "com.tngtech.archunit:archunit-junit5:$archUnitVersion"
        testImplementation "com.h2database:h2:$h2Version"

        compileOnly "org.projectlombok:lombok:$lombok"
        annotationProcessor "org.projectlombok:lombok:$lombok"
    }
    test {
        useJUnitPlatform()
    }
}

task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}